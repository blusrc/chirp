import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { SignIn, SignInButton, useUser, SignOutButton } from "@clerk/nextjs";

import { RouterOutputs, api } from "~/utils/api";
import { use } from "react";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  console.log(user);

  return (
    <div className="flex grow gap-4">
      <img
        src={user.profileImageUrl}
        alt="profile image"
        className="h-12 w-12 rounded-full border-2 border-slate-400"
      />

      {/* <span>{user.externalId} <br/> {user.id}</span> */}

      <input
        type="text"
        placeholder="Type some emojis"
        className="grow bg-transparent px-2"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author} = props;
  return (
    <div className="flex gap-3 m-2 bg-slate-700 rounded border-slate-100 py-4 px-3">
      <img src={author.profilePicture} alt="profile pic" className="h-12 w-12 rounded-full border-2 border-slate-400"/>
      <div className="flex flex-col gap-2">
        <div className="flex gap-2">
          <span>{`@${author.username}`}</span>
        </div>
        <div>
          {post.content}
        </div>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Chirp</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className="border-b border-slate-400 p-4">
            {!user.isSignedIn && (
              <SignInButton mode="modal">
                <button className="rounded bg-purple-800 py-2 px-4 text-slate-100">
                  Sign in
                </button>
              </SignInButton>
            )}
            {!!user.isSignedIn && (
              <div className="flex justify-between gap-4">
                <CreatePostWizard />
                <SignOutButton>
                  <button className="rounded bg-purple-800 py-2 px-4 text-slate-100">
                    Sign out
                  </button>
                </SignOutButton>
              </div>
            )}
          </div>
          <div className="flex flex-col">
            {[...data, ...data]?.map(
              (fullPost) => (
                <PostView {...fullPost} key={fullPost.post.id} />
              )
            )}
            {/* <div>Hello</div> */}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
